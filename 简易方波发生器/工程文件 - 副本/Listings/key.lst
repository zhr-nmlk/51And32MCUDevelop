C51 COMPILER V9.54   KEY                                                                   11/02/2024 23:11:37 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\Objects\key.obj
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE key.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\key.lst
                    -) OBJECT(.\Objects\key.obj)

line level    source

   1          #include <REGX52.H>
   2          
   3          #define key_input    P3_0    // 按键输入口
   4          
   5          #define N_key    0             //无键
   6          #define S_key    1             //单键
   7          #define D_key    2             //双键
   8          #define L_key    3             //长键
   9          
  10          #define key_state_0 0
  11          #define key_state_1 1
  12          #define key_state_2 2   
  13          #define key_state_3 3
  14          
  15          unsigned char key_driver(void)
  16          {
  17   1          static unsigned char key_state = key_state_0, key_time = 0;
  18   1          unsigned char key_press, key_return = N_key;
  19   1      //      unsigned char key1,key0,key2;
  20   1      //      key1 = P3_1 ;
  21   1      //      key0 = P3_0;
  22   1      //      key2 = P3_2;
  23   1      //      key_press = key1 + key0+key2;
  24   1          key_press = key_input;                  // 读按键I/O电平
  25   1      
  26   1          switch (key_state)
  27   1          {
  28   2            case key_state_0:                            // 按键初始态
  29   2              if (!key_press) key_state = key_state_1;  //键被按下，状态转换到按键消抖和确认状态
  30   2              break;
  31   2            
  32   2            case key_state_1:                      // 按键消抖与确认态
  33   2              if (!key_press)
  34   2              {
  35   3                   key_time = 0;                   //  
  36   3                   key_state = key_state_2;   // 按键仍然处于按下，消抖完成，状态转换到按下键时间 
  37   3                                                                // 的计时状态，但返回的还是无键事件
  38   3              }
  39   2              else
  40   2                   key_state = key_state_0;   // 按键已抬起，转换到按键初始态。此处完成和实现软件 
  41   2                                                                // 消抖，其实按键的按下和释放都在此消抖的。
  42   2              break;
  43   2            
  44   2            case key_state_2:
  45   2              if(key_press)
  46   2              {
  47   3                   key_return = S_key;           // 此时按键释放，说明是产生一次短操作，回送S_key
  48   3                   key_state = key_state_0;   // 转换到按键初始态
  49   3              }
  50   2              else if (++key_time >= 100)    // 继续按下，计时加10ms（10ms为本函数循环执行间隔）
  51   2              {
  52   3                   key_return = L_key;            // 按下时间>1000ms，此按键为长按操作，返回长键事件
  53   3                   key_state = key_state_3;   // 转换到等待按键释放状态
  54   3              }
C51 COMPILER V9.54   KEY                                                                   11/02/2024 23:11:37 PAGE 2   

  55   2              break;
  56   2      
  57   2            case key_state_3:                 // 等待按键释放状态，此状态只返回无按键事件
  58   2              if (key_press) key_state = key_state_0; //按键已释放，转换到按键初始态
  59   2              break;
  60   2          }
  61   1          return key_return;
  62   1      }
  63          
  64          unsigned char key_read(void)
  65          {
  66   1          static unsigned char key_m = key_state_0, key_time_1 = 0;
  67   1          unsigned char key_return = N_key,key_temp;
  68   1           
  69   1          key_temp = key_driver();
  70   1           
  71   1          switch(key_m)
  72   1          {
  73   2              case key_state_0:
  74   2                  if (key_temp == S_key )
  75   2                  {
  76   3                       key_time_1 = 0; // 第1次单击，不返回，到下个状态判断后面是否出现双击
  77   3                       key_m = key_state_1;
  78   3                  }
  79   2                  else
  80   2                       key_return = key_temp;        // 对于无键、长键，返回原事件
  81   2                  break;
  82   2      
  83   2              case key_state_1:
  84   2                  if (key_temp == S_key)             // 又一次单击（间隔肯定<500ms）
  85   2                  {
  86   3                       key_return = D_key;           // 返回双击键事件，回初始状态
  87   3                       key_m = key_state_0;
  88   3                  }
  89   2                  else                                
  90   2                  {                         // 这里500ms内肯定读到的都是无键事件，因为 
  91   3                                            // 长键>1000ms，在1s前低层返回的都是无键
  92   3                       if(++key_time_1 >= 50)
  93   3                       {
  94   4                           key_return = S_key; //500ms内没有再次出现单键事件，返回上一次 
  95   4                                               // 的单键事件
  96   4                           key_m = key_state_0;   // 返回初始状态
  97   4                       }
  98   3                   }
  99   2                   break;
 100   2          }
 101   1          return key_return;
 102   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    121    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
