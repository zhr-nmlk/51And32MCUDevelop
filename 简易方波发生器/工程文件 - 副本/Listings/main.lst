C51 COMPILER V9.54   MAIN                                                                  11/08/2024 17:46:47 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.l
                    -st) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "key.h"
   3          #include "Nixie.h"
   4          #include "I2C.h"
   5          #include "AT24C02.h"
   6          #include "UART.h"
   7          
   8          #define MODE1 1         //模式1，2，3
   9          #define MODE2 2
  10          #define MODE3 3
  11          
  12          #define S_key    1             //单键
  13          #define D_key    2             //双键
  14          #define L_key    3             //长键
  15          
  16          unsigned char State=1;
  17          unsigned char Key,Key1,Key2,time_ok;
  18          unsigned char Hz=10,dutyfactor=50;//初始化
  19          unsigned char Key_Up_Count,Key_Down_Count,Tcount,dutyfactor_up,dutyfactor_down,time_count_read,RWflag=0;
  20          unsigned int T;//定义周期
  21          unsigned char * Hz_Duty;
  22          unsigned char Hz_Duty_Record[]="f=  ,d=   .";
  23          void bo()
  24          {
  25   1              if(Tcount >= T) 
  26   1              {                               //一个PWM周期
  27   2                      Tcount = 0;                                     //下一个PWM周期内，重新计数
  28   2                      
  29   2              }  
  30   1              //占空比：高电平时间占周期时间的比例
  31   1      
  32   1              //在一个PWM周期内，根据周期计数是否小于占空比
  33   1              if(Tcount <= (dutyfactor*T*0.01)) 
  34   1              {               //周期计数值<占空比
  35   2                      P2_7 = 1;
  36   2              } else {
  37   2                      P2_7 = 0;
  38   2              }
  39   1      }
  40          
  41          void modeshift()
  42          {
  43   1              switch(State)
  44   1              {
  45   2                      case MODE1:
  46   2                                      bo();   //pwm产生方波
  47   2                                      if(time_ok)             //模式切换
  48   2                                      {
  49   3                                              time_ok=0;
  50   3                                              Key=key_read();
  51   3                                              if(Key==S_key)
  52   3                                                      State=1;
  53   3                                              if(Key==D_key)
  54   3                                                      State=2;
C51 COMPILER V9.54   MAIN                                                                  11/08/2024 17:46:47 PAGE 2   

  55   3                                              if(Key==L_key)
  56   3                                                      State=3;
  57   3                                      }
  58   2                                      if(P3_2==0)
  59   2                                      {
  60   3                                              if(time_count_read<=250) time_count_read++;
  61   3                                      }else time_count_read=0;
  62   2                                      if(time_count_read==250)
  63   2                                      {
  64   3                                              time_count_read=0;
  65   3                                              Hz=AT24C02_ReadByte(0);
  66   3                                              dutyfactor=AT24C02_ReadByte(1);
  67   3                                      }
  68   2                                      T=1000/Hz;
  69   2                                      Nixie(3,Hz/10);Nixie(4,Hz%10);//显示频率
  70   2                                      Nixie(5,dutyfactor/100);Nixie(6,dutyfactor%100/10);Nixie(7,dutyfactor%10);//显示占空比
  71   2                                      break;
  72   2                      case MODE2:
  73   2                                      Nixie(4,1);
  74   2                                      Nixie(5,Hz/10);
  75   2                                      Nixie(6,Hz%10);
  76   2                                      if(P3_1==0)
  77   2                                      {
  78   3                                              if(Key_Down_Count<=250)Key_Down_Count++;
  79   3                                      }else Key_Down_Count=0;
  80   2                                      if(Key_Down_Count==250)
  81   2                                      {       
  82   3                                              Key_Down_Count=0;
  83   3                                              if(Hz>0)Hz--;
  84   3                                      }
  85   2                                      
  86   2                                      if(P3_3==0)
  87   2                                      {
  88   3                                              if(Key_Up_Count<=250)Key_Up_Count++;
  89   3                                      }else Key_Up_Count=0;
  90   2                                      if(Key_Up_Count==250)
  91   2                                      {       
  92   3                                              Key_Up_Count=0;
  93   3                                              if(Hz<50)Hz++;
  94   3                                      }
  95   2                                              if(time_ok)
  96   2                                              {
  97   3                                                      time_ok=0;
  98   3                                                      Key=key_read();
  99   3                                                      if(Key==S_key)
 100   3                                                              State=1;
 101   3                                                              
 102   3                                              }
 103   2                                      
 104   2                                      T=1000/Hz;
 105   2      //                              Hz_Duty[2]=Hz/10;
 106   2      //                              Hz_Duty[3]=Hz%10;
 107   2                                      break;
 108   2                      case MODE3:
 109   2                                      Nixie(4,2);
 110   2                                      Nixie(5,dutyfactor/100);
 111   2                                      Nixie(6,dutyfactor%100/10);
 112   2                                      Nixie(7,dutyfactor%10);
 113   2                                      if(P3_1==0)
 114   2                                      {
 115   3                                              if(dutyfactor_up<=250)dutyfactor_up++;
 116   3                                      }else dutyfactor_up=0;
C51 COMPILER V9.54   MAIN                                                                  11/08/2024 17:46:47 PAGE 3   

 117   2                                      if(dutyfactor_up==250)
 118   2                                      {       
 119   3                                              dutyfactor_up=0;
 120   3                                              if(dutyfactor>0)dutyfactor-=10;
 121   3                                      }
 122   2                                      
 123   2                                      if(P3_3==0)
 124   2                                      {
 125   3                                              if(dutyfactor_down<=250)dutyfactor_down++;
 126   3                                      }else dutyfactor_down=0;
 127   2                                      if(dutyfactor_down==250)
 128   2                                      {       
 129   3                                              dutyfactor_down=0;
 130   3                                              if(dutyfactor<100)dutyfactor+=10;
 131   3                                      }
 132   2                                      
 133   2                                      if(time_ok)
 134   2                                      {
 135   3                                              time_ok=0;
 136   3                                              Key=key_read();
 137   3                                              if(Key==S_key)
 138   3                                                      State=1;
 139   3                                      }
 140   2                                      break;
 141   2              }
 142   1      }
 143          void Timer0Init(void)           //1毫秒@11.0592MHz
 144          {
 145   1              TMOD &= 0xF0;           //设置定时器模式
 146   1              TMOD |= 0x01;           //设置定时器模式
 147   1              TL0 = 0x66;             //设置定时初值
 148   1              TH0 = 0xFC;             //设置定时初值
 149   1              TF0 = 0;                //清除TF0标志
 150   1              TR0 = 1;                //定时器0开始计时
 151   1              ET0 = 1;
 152   1              EA=1;
 153   1      }
 154          
 155          void Timer1Init(void)           //10毫秒@11.0592MHz
 156          {
 157   1              TMOD &= 0x0F;           //设置定时器模式
 158   1              TMOD |= 0x10;           //设置定时器模式
 159   1              TL1 = 0x00;             //设置定时初值
 160   1              TH1 = 0xDC;             //设置定时初值
 161   1              TF1 = 0;                //清除TF1标志
 162   1              TR1 = 1;                //定时器1开始计时
 163   1              ET1=1;
 164   1      }
 165          
 166          //void Timer2Init(void)         //100微秒@11.0592MHz
 167          //{
 168          //      T2MOD = 0;              //初始化模式寄存器
 169          //      T2CON = 0;              //初始化控制寄存器
 170          //      TL2 = 0xA4;             //设置定时初值
 171          //      TH2 = 0xFF;             //设置定时初值
 172          //      RCAP2L = 0xA4;          //设置定时重载值
 173          //      RCAP2H = 0xFF;          //设置定时重载值
 174          //      TR2 = 0;                //定时器2开始计时
 175          //      
 176          //}
 177          void Timer2Init(void)           //10毫秒@11.0592MHz
 178          {
C51 COMPILER V9.54   MAIN                                                                  11/08/2024 17:46:47 PAGE 4   

 179   1              T2MOD = 0;              //初始化模式寄存器
 180   1              T2CON = 0;              //初始化控制寄存器
 181   1              TL2 = 0x00;             //设置定时初值
 182   1              TH2 = 0xDC;             //设置定时初值
 183   1              RCAP2L = 0x00;          //设置定时重载值
 184   1              RCAP2H = 0xDC;          //设置定时重载值
 185   1              TR2 = 1;                //定时器2开始计时
 186   1              ET2=1;
 187   1      }
 188          
 189          
 190          void main()
 191          {
 192   1              P2_5=0;
 193   1              Timer0Init();
 194   1              Timer1Init();
 195   1              Timer2Init();
 196   1      //      UartInit();
 197   1              while(1)
 198   1              {
 199   2                      bo();
 200   2                      modeshift();
 201   2              }
 202   1      }
 203          
 204          unsigned int T0Count,T1Count,Tflag,CaseCount;
 205          void Timer0_Routine() interrupt 1               //定时器1中断 1ms
 206          {
 207   1              TL0 = 0x66;             //设置定时初值
 208   1              TH0 = 0xFC;             //设置定时初值
 209   1              Tcount++;
 210   1              T0Count++;
 211   1              if(T0Count>=10)
 212   1              {
 213   2                      T0Count=0;
 214   2                      time_ok=1;
 215   2              }
 216   1      }
 217          
 218          //void Timer1_Rountine(void) interrupt 3//定时器1中断   10ms
 219          //{
 220          //      TL1 = 0x00;             //设置定时初值
 221          //      TH1 = 0xDC;             //设置定时初值
 222          //}
 223          
 224          void Timer2_Rountine(void) interrupt 5//定时器2中断     10ms
 225          {
 226   1              TF2=0;
 227   1              Tflag++;
 228   1                      switch(Tflag)
 229   1                      {
 230   2                              case 1:
 231   2                                      if(Hz!=10)
 232   2                                              AT24C02_WriteByte(0,Hz);  //写hz，10ms后写dutyfactor
 233   2                                      break;
 234   2                              case 2:if(dutyfactor!=50)
 235   2                                              AT24C02_WriteByte(1,dutyfactor);
 236   2                                      break;
 237   2                      }
 238   1                      if(Tflag>=2)
 239   1                              Tflag=0;        
 240   1      }
C51 COMPILER V9.54   MAIN                                                                  11/08/2024 17:46:47 PAGE 5   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    830    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     39    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
